
//--------------------------------------------------------------------------------------
// File: Tutorial04.fx
//
// Copyright (c) Microsoft Corporation. All rights reserved.
//--------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
// Constant Buffer Variables
//--------------------------------------------------------------------------------------
cbuffer ConstantBuffer : register( b0 )
{
	matrix World;
	matrix View;
	matrix Projection;
    float4 lightPos;
}

//--------------------------------------------------------------------------------------
struct VS_OUTPUT
{
    float4 Pos : SV_POSITION;
    float4 Color : COLOR0;
    float3 Normal : TEXCOORD0;
    float3 PosWorld : TEXCOORD1;
};

//--------------------------------------------------------------------------------------
// Vertex Shader
//--------------------------------------------------------------------------------------
VS_OUTPUT VS( float4 Pos : POSITION, float4 Color : COLOR, float3 N : Normal)
{
    VS_OUTPUT output = (VS_OUTPUT)0;
    output.Pos = mul( Pos, World );
    output.Pos = mul( output.Pos, View );
    output.Pos = mul( output.Pos, Projection );
    output.Normal = mul(float4(N, 1), World).xyz;
    output.PosWorld = Pos.xyz;
    return output;
}


//--------------------------------------------------------------------------------------
// Pixel Shader
//--------------------------------------------------------------------------------------
float4 PS(VS_OUTPUT input) : SV_Target
{
    float4 materialAmb = float4(1.1, 0.2, 0.2, 1.0);
    float4 materialDiff = float4(0.9, 0.7, 1.0, 1.0);
    float4 lightCol = float4(1.0, 1.0, 1.0, 1.0);
    float3 lightDir = normalize(lightPos.xyz - input.PosWorld.xyz);
    float3 normal = normalize(input.Normal);
    float diff = max(0.0, dot(lightDir, normal));

    //reflection
    float3 R = reflect(-lightDir, normal);
    float4 eyePos = float4(0.0f, 1.0f, -5.0f, 0.0f);

    float3 V = eyePos.xyz - input.Pos.xyz;
    R = normalize(R);
    V = normalize(V);
    float dotRV = max(0.0, dot(R, V));
    dotRV = pow(dotRV, 30);
    float4 specColo = float4(10.3f, 2.1f, 0.1f, 1.0f);
    float4 spec = dotRV * specColo;
    input.Color = (materialAmb + diff * materialDiff + spec * 2000) * lightCol;
    return input.Color;
}

